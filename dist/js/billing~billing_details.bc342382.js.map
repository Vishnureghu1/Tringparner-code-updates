{"version":3,"sources":["webpack:///../../../src/components/VRadioGroup/VRadioGroup.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/components/VRadioGroup/VRadio.ts","webpack:///../../../src/components/VCard/index.ts","webpack:///../../../src/components/VCheckbox/VCheckbox.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["baseMixins","name","provide","radioGroup","this","props","column","type","default","height","Number","row","value","computed","classes","methods","genDefaultSlot","$createElement","staticClass","attrs","id","role","computedId","genInputSlot","render","genLabel","label","onClick","directives","ripple","Boolean","genRipple","data","center","inheritAttrs","disabled","offIcon","onIcon","readonly","isFocused","groupClasses","computedColor","computedIcon","isActive","hasLabel","hasState","isDisabled","isReadonly","computedName","rippleState","validationState","genInput","on","click","for","color","focused","genRadio","radioAttrs","setTextColor","dense","onFocus","onBlur","onChange","onKeydown","class","title","attrs$","h","VCardActions","VCardSubtitle","VCardText","VCardTitle","indeterminate","indeterminateIcon","inputIndeterminate","hasError","hasColor","watch","genCheckbox","checkboxAttrs","dark","light","toString","e","model","prop","event","inputValue","falseValue","trueValue","multiple","String","lazyValue","isDark","isMultiple","Array","input","item","undefined","valueComparator","isDirty","prevent","Object","domProps","checked","blur","change","focus","keydown","ref","length"],"mappings":"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","file":"js/billing~billing_details.bc342382.js","sourcesContent":["// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VRadioGroup.sass'\n\n// Extensions\nimport VInput from '../VInput'\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { PropType } from 'vue'\n\nconst baseMixins = mixins(\n  Comparable,\n  BaseItemGroup,\n  VInput\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-radio-group',\n\n  provide () {\n    return {\n      radioGroup: this,\n    }\n  },\n\n  props: {\n    column: {\n      type: Boolean,\n      default: true,\n    },\n    height: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    name: String,\n    row: Boolean,\n    // If no value set on VRadio\n    // will match valueComparator\n    // force default to null\n    value: null as unknown as PropType<any>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--radio-group': true,\n        'v-input--radio-group--column': this.column && !this.row,\n        'v-input--radio-group--row': this.row,\n      }\n    },\n  },\n\n  methods: {\n    genDefaultSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-input--radio-group__input',\n        attrs: {\n          id: this.id,\n          role: 'radiogroup',\n          'aria-labelledby': this.computedId,\n        },\n      }, VInput.options.methods.genDefaultSlot.call(this))\n    },\n    genInputSlot () {\n      const render = VInput.options.methods.genInputSlot.call(this)\n\n      delete render.data!.on!.click\n\n      return render\n    },\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return null\n\n      label.data!.attrs!.id = this.computedId\n      // WAI considers this an orphaned label\n      delete label.data!.attrs!.for\n      label.tag = 'legend'\n\n      return label\n    },\n    onClick: BaseItemGroup.options.methods.onClick,\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","// Styles\nimport './VRadio.sass'\n\n// Components\nimport VRadioGroup from './VRadioGroup'\nimport VLabel from '../VLabel'\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Rippleable from '../../mixins/rippleable'\nimport Themeable from '../../mixins/themeable'\nimport Selectable, { prevent } from '../../mixins/selectable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\nimport { mergeListeners } from '../../util/mergeData'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Colorable,\n  Rippleable,\n  GroupableFactory('radioGroup'),\n  Themeable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  radioGroup: InstanceType<typeof VRadioGroup>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-radio',\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    id: String,\n    label: String,\n    name: String,\n    offIcon: {\n      type: String,\n      default: '$radioOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$radioOn',\n    },\n    readonly: Boolean,\n    value: {\n      default: null,\n    },\n  },\n\n  data: () => ({\n    isFocused: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-radio--is-disabled': this.isDisabled,\n        'v-radio--is-focused': this.isFocused,\n        ...this.themeClasses,\n        ...this.groupClasses,\n      }\n    },\n    computedColor (): string | undefined {\n      return Selectable.options.computed.computedColor.call(this)\n    },\n    computedIcon (): string {\n      return this.isActive\n        ? this.onIcon\n        : this.offIcon\n    },\n    computedId (): string {\n      return VInput.options.computed.computedId.call(this)\n    },\n    hasLabel: VInput.options.computed.hasLabel,\n    hasState (): boolean {\n      return (this.radioGroup || {}).hasState\n    },\n    isDisabled (): boolean {\n      return this.disabled || (\n        !!this.radioGroup &&\n        this.radioGroup.isDisabled\n      )\n    },\n    isReadonly (): boolean {\n      return this.readonly || (\n        !!this.radioGroup &&\n        this.radioGroup.isReadonly\n      )\n    },\n    computedName (): string {\n      if (this.name || !this.radioGroup) {\n        return this.name\n      }\n\n      return this.radioGroup.name || `radio-${this.radioGroup._uid}`\n    },\n    rippleState (): string | undefined {\n      return Selectable.options.computed.rippleState.call(this)\n    },\n    validationState (): string | undefined {\n      return (this.radioGroup || {}).validationState || this.computedColor\n    },\n  },\n\n  methods: {\n    genInput (args: any) {\n      // We can't actually use the mixin directly because\n      // it's made for standalone components, but its\n      // genInput method is exactly what we need\n      return Selectable.options.methods.genInput.call(this, 'radio', args)\n    },\n    genLabel () {\n      if (!this.hasLabel) return null\n\n      return this.$createElement(VLabel, {\n        on: {\n          // Label shouldn't cause the input to focus\n          click: prevent,\n        },\n        attrs: {\n          for: this.computedId,\n        },\n        props: {\n          color: this.validationState,\n          focused: this.hasState,\n        },\n      }, getSlot(this, 'label') || this.label)\n    },\n    genRadio () {\n      const { title, ...radioAttrs } = this.attrs$\n\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.radioGroup && this.radioGroup.dense,\n          },\n        }), this.computedIcon),\n        this.genInput({\n          name: this.computedName,\n          value: this.value,\n          ...radioAttrs,\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    onFocus (e: Event) {\n      this.isFocused = true\n      this.$emit('focus', e)\n    },\n    onBlur (e: Event) {\n      this.isFocused = false\n      this.$emit('blur', e)\n    },\n    onChange () {\n      if (this.isDisabled || this.isReadonly || this.isActive) return\n\n      this.toggle()\n    },\n    onKeydown: () => {}, // Override default with noop\n  },\n\n  render (h): VNode {\n    const data: VNodeData = {\n      staticClass: 'v-radio',\n      class: this.classes,\n      on: mergeListeners({\n        click: this.onChange,\n      }, this.listeners$),\n      attrs: { title: this.attrs$.title },\n    }\n\n    return h('div', data, [\n      this.genRadio(),\n      this.genLabel(),\n    ])\n  },\n})\n","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}